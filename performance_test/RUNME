#!/bin/bash

if test $# -ne 2
then
        printf "Uso: RUNME Ni Nf\nNi: Numero nodi istanza iniziale\nNf: numero nodi istanza finale\n"; exit 1;
fi

command0='eclipse -f $instance -f ../../performance_test/set_tsp_no_optimization.ecl -e "set_tsp" |
		grep -e "numero_backtracking" -e "Succ" -e "Pred" -e "time" |
		cut -f 2 -d : | tr -d $"\r" | tr -d " "'
command='eclipse -f $instance -f ../../performance_test/set_tsp_with_choice.ecl -e "set_tsp($ch1,$ch2,$ch3)" |
		grep -e "numero_backtracking" -e "Succ" -e "Pred" -e "time" |  	
		cut -f 2 -d : | tr -d $"\r" | tr -d " "'

now=$(date +'%F_%H%M')
mkdir $now

output_back=$now/output_back.csv
output_time=$now/output_time.csv
output_sol=$now/output_sol.csv

sep=";"
echo "sep=$sep" | tee $output_back | tee $output_time > $output_sol
#header="istance;no_vincolo;noboth_cross;noboth;nopredtosucc_cross;nopredtosucc;nosort_cross;nosort;cross;normal\n"	
header="istance;no_vincolo;orario;orario_con_sort\n"
printf "$header" >> $output_back
printf "$header" >> $output_time
printf "$header" >> $output_sol


cd ../instances-clustered
for dir in *
do
	if test -d $dir && test ${dir:8:2} -le $2 && test ${dir:8:2} -ge $1
	then
		cd $dir
		for instance in *.d.pl
		do
			printf "TSP per instaza $instance\n"

			line_back="$(echo "$instance" | cut -d / -f 3)"
			line_time="$(echo "$instance" | cut -d / -f 3)"
			line_sol="$(echo "$instance" | cut -d / -f 3)"
			out=($(eval $command0))

			if test $? -ne 0 
			then
				echo "Esecuzione eclipse fallita"
				exit 1
			fi

			count=0
			for i in "${out[@]}"
			do
				case $count in
					0) 
						sol=$i
						#echo $sol 
						line_sol=$line_sol$sep"$i";;
					1) ;;
					2) line_back="$line_back$sep$i";;
					3) line_time="$line_time$sep$i";;
				esac
				count=$((count+1))
			done

			for x in $(seq 0 1)
			do
				#choices=$(printf "%.3d" `echo "obase=2;$x" | bc`)
				case $x in 
					0) choices=000;;
					1) choices=010;;
				esac
				ch1=${choices:0:1}
				ch2=${choices:1:1}
				ch3=${choices:2:1}
				out=($(eval $command))

				if test $? -ne 0 
				then
					echo "Esecuzione eclipse fallita"
					exit 1
				fi

				count=0
				sn=0
				#printf "\nConfronto\n"
				for i in "${out[@]}"
				
				do
					case $count in
						0|1) 
							#echo $i 
							if [[ "$sol" == "$i" ]]
							then
								sn=1
							fi;;
						2) line_back="$line_back$sep$i";;
						3) line_time="$line_time$sep$i";;
					esac
					count=$((count+1))
				done

				if test "$sn" -eq 1
				then
					line_sol="$line_sol${sep}sÃ¬"
				else
					line_sol="$line_sol${sep}no"
				fi
			done
			echo $line_sol >> ../../performance_test/$output_sol
			echo $line_back >> ../../performance_test/$output_back
			echo $line_time >> ../../performance_test/$output_time
		done
		cd .. 
	fi
done
cd ../performance_test

python3 tsp_output.py $now $sep | tee /dev/tty > $now/ranking_result.txt


